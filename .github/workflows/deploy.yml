name: CI & Deploy to Droplet

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
#  ci:
#    name: Lint & Test
#    runs-on: ubuntu-latest

#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Set up Go
#        uses: actions/setup-go@v5
#        with:
#          go-version-file: go.mod

#      - name: Cache Go modules
#        uses: actions/cache@v4
#        with:
#          path: |
#            ~/go/pkg/mod
#            ~/.cache/go-build
#          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
#          restore-keys: |
#            ${{ runner.os }}-go-

#      - name: golangci-lint
#        uses: golangci/golangci-lint-action@v6
#        with:
#          version: v1.59.1
#          args: --timeout=3m
#          only-new-issues: false

#      - name: Run tests
#        run: go test ./... -v

  deploy:
    name: Deploy to Droplet
#    needs: ci
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Start ssh-agent and add key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add droplet to known_hosts
        run: ssh-keyscan -H ${{ secrets.DROPLET_HOST }} >> ~/.ssh/known_hosts

      - name: Run remote deploy script
        env:
          HOST: ${{ secrets.DROPLET_HOST }}
          USER: ${{ secrets.DROPLET_USER }}
        run: |
          ssh \
            -o StrictHostKeyChecking=accept-new \
            -o TCPKeepAlive=yes \
            -o ServerAliveInterval=30 \
            -o ServerAliveCountMax=120 \
            -tt "${USER}@${HOST}" 'bash -lc "/opt/fit-profi/deploy.sh"'