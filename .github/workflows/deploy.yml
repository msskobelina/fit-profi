name: CI & Deploy to Droplet

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
#  ci:
#    name: Lint & Test
#    runs-on: ubuntu-latest

#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Set up Go
#        uses: actions/setup-go@v5
#        with:
#          go-version-file: go.mod

#      - name: Cache Go modules
#        uses: actions/cache@v4
#        with:
#          path: |
#            ~/go/pkg/mod
#            ~/.cache/go-build
#          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
#          restore-keys: |
#            ${{ runner.os }}-go-

#      - name: golangci-lint
#        uses: golangci/golangci-lint-action@v6
#        with:
#          version: v1.59.1
#          args: --timeout=3m
#          only-new-issues: false

#      - name: Run tests
#        run: go test ./... -v

  deploy:
    name: Deploy to Droplet
#    needs: ci
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Install SSH client
        run: sudo apt-get update && sudo apt-get install -y openssh-client

      - name: Add SSH key & known_hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          if [ -n "${{ secrets.SSH_KNOWN_HOSTS }}" ]; then
            echo "${{ secrets.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          else
            ssh-keyscan -H ${{ secrets.DROPLET_HOST }} >> ~/.ssh/known_hosts
          fi

      - name: Run remote deploy script
        env:
          HOST: ${{ secrets.DROPLET_HOST }}
          USER: ${{ secrets.DROPLET_USER }}
        run: |
          ssh -o StrictHostKeyChecking=yes ${USER}@${HOST} 'bash /opt/fit-profi/deploy.sh'
